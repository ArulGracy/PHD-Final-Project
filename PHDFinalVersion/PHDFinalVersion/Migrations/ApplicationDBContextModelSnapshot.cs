// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PHDFinalVersion.AppDBContext;

#nullable disable

namespace PHDFinalVersion.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PHDFinalVersion.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("MessageId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.OTPValidationRequest", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Otp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StuID")
                        .HasColumnType("int");

                    b.ToTable("OTPValidation");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.StudentProfileTable", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Enabled")
                        .HasColumnType("int");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linkdinprofile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Programstartyear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchTopic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Verified")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.ToTable("StudentProfile");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.StudentToStudent", b =>
                {
                    b.Property<int>("StudentID1")
                        .HasColumnType("int");

                    b.Property<int>("StudentID2")
                        .HasColumnType("int");

                    b.HasKey("StudentID1", "StudentID2");

                    b.HasIndex("StudentID2");

                    b.ToTable("StudentToStudent");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.StudentsGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("GroupId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentsGroup");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.Message", b =>
                {
                    b.HasOne("PHDFinalVersion.Models.Group", "Groups")
                        .WithMany("MessageGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PHDFinalVersion.Models.StudentProfileTable", "Receiver")
                        .WithMany("Message1")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PHDFinalVersion.Models.StudentProfileTable", "Sender")
                        .WithMany("Message2")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.StudentToStudent", b =>
                {
                    b.HasOne("PHDFinalVersion.Models.StudentProfileTable", "Student1")
                        .WithMany("StudentToStudent1")
                        .HasForeignKey("StudentID1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PHDFinalVersion.Models.StudentProfileTable", "Student2")
                        .WithMany("StudentToStudent2")
                        .HasForeignKey("StudentID2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student1");

                    b.Navigation("Student2");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.StudentsGroup", b =>
                {
                    b.HasOne("PHDFinalVersion.Models.Group", "StudentGroupGroup")
                        .WithMany("GroupStudentsGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PHDFinalVersion.Models.StudentProfileTable", "StudentGroupProfile")
                        .WithMany("StudentStudentsGroups")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentGroupGroup");

                    b.Navigation("StudentGroupProfile");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.Group", b =>
                {
                    b.Navigation("GroupStudentsGroups");

                    b.Navigation("MessageGroups");
                });

            modelBuilder.Entity("PHDFinalVersion.Models.StudentProfileTable", b =>
                {
                    b.Navigation("Message1");

                    b.Navigation("Message2");

                    b.Navigation("StudentStudentsGroups");

                    b.Navigation("StudentToStudent1");

                    b.Navigation("StudentToStudent2");
                });
#pragma warning restore 612, 618
        }
    }
}
